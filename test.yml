---
AWSTemplateFormatVersion: '2010-09-09'
Description:
Outputs:
  URL:
    Description: URL of the website
    Value:
      Fn::Join:
      - ''
      - - https://
        - Fn::GetAtt:
          - ElasticLoadBalancer
          - DNSName
Conditions:
  EnableSSHCondition:
    Fn::Equals:
    - Ref: EnableSSH
    - 'true'
  ASGHealthCheckTypeIsELBCondition:
    Fn::Equals:
    - Ref: ASGHealthCheckType
    - ELB
  ELBHealthCheckURLDefinedCondition:
    Fn::Not:
    - Fn::Equals:
      - Ref: ELBHealthCheckURL
      - NONE
  SSLCertDefinedCondition:
    Fn::Not:
    - Fn::Equals:
      - Ref: CertName
      - NONE
  ELBSubnetsCondition:
    Fn::Not:
    - Fn::Equals:
      - Ref: ELBType
      - internet-facing
Parameters:
  AmiId:
    Description: ID of the AMI to scale.
    Type: String
  BundlePath:
    Description: Project BundlePath Location.
    Type: String
  Owner:
    Description: Project Owner Location.
    Type: String
  Template:
    Description: Project Template Location.
    Type: String
  ServiceName:
    Description: Project ServiceName Location.
    Type: String
  DNSShortName:
    Default: NONE
    Description: DNSShortName
    Type: String
  DNSZoneName:
    Default: local
    Description: DNSZoneName
    Type: String
  CPUThreshold:
    Default: '50'
    Description: CPU Threshold configuration.
    Type: String
  Change:
    Description: Change control ticket for this deployment.
    Type: String
  ELBIdleTimeout:
    Default: '60'
    Description: Load Balancer Idle Timeout
    Type: Number
  ELBType:
    Default: internet-facing
    Description: Type of ELB - internal or external.
    Type: String
  ElbPort:
    Default: '443'
    Description: TCP/IP port of the ELB.
    Type: String
  EnableSSH:
    AllowedValues:
    - 'true'
    - 'false'
    ConstraintDescription: must true or false.
    Default: 'false'
    Description: Enable ssh access.  Default is true so that the resulting instance
      can be checked in the fabrication environment.
    Type: String
  ASGHealthCheckGracePeriod:
    Default: '300'
    Description: Set the healthcheck grace period before the first healthcheck for
      the ELB ASG. Default is 120 seconds.
    Type: String
  ASGHealthCheckType:
    AllowedValues:
    - ELB
    - INSTANCE
    ConstraintDescription: must be ELB or INSTANCE.
    Default: ELB
    Description: Set the healthcheck type for the ELB ASG. Default is ELB which was
      the default behavior before adding this parameter.
    Type: String
  ELBHealthCheckURL:
    Default: NONE
    Description: Set the healthcheck URL for the ELB ASG. There is no default.
    Type: String
  KeyName:
    Default: preprod
    Description: Key Name for ssh access. This should be a valid key pair name.
    Type: String
  Environment:
    AllowedValues:
    - Development
    - QA
    - Integration
    - Integration-historical
    - PreProduction
    - Production
    - Production-historical
    - Performance
    Description: Type of environment.
    Type: String
  HealthCheckPort:
    Default: '443'
    Description: TCP/IP port of the web server
    Type: String
  InitialInstanceCount:
    Default: '2'
    Description: Number of initial EC2 instances to launch
    Type: Number
  InstanceType:
    AllowedValues:
    - t2.micro
    - t2.medium
    - t3.medium
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - c1.medium
    - c1.xlarge
    - cc1.4xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    - c3.large
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m3.medium
    Description: EC2 instance type of the AMI to scale.
    Type: String
  VolumeDeviceName:
    Description: Root volume device name
    Default: "/dev/sda1"
    Type: String
  RootVolume:
    Description: Root volume size
    Default: '16'
    Type: Number
  VolumeType:
    Description: Root Volume Type
    Default: gp2
    Type: String
  Iops:
    Description: Root volume Iops
    Default: '100'
    Type: Number
  VolumeDeleteOnTermination:
    Description: Volume deletion on termination of EC2 instance Flag
    AllowedValues:
    - 'true'
    - 'false'
    ConstraintDescription: must be true or false.
    Default: 'true'
    Type: String
  InstanceProfile:
    Default: Deployer-Role
    Description: EC2 instance profile.
    Type: String
  ListenerProtocol:
    Default: tcp
    Description: Listenet protocol of the ELB.
    Type: String
  InstanceProtocol:
    Default: tcp
    Description: 'Listenet protocol to use for routing traffic to back-end instances:
      HTTP, HTTPS, TCP, or SSL of the ELB.'
    Type: String
  MaximumInstanceCount:
    Default: '10'
    Description: Maximum number of EC2 instances to have in the group
    Type: Number
  MinimumInstanceCount:
    Default: '2'
    Description: Minimum number of EC2 instances to keep in the group
    Type: Number
  OperatorEmail:
    Description: Email address to notify if there are any scaling operations
    Type: String
  Platform:
    AllowedValues:
    - AMP
    - BusinessProcessing
    - ConsolidatedSettlementPlatform
    - VEGA
    - Galaxy
    - LYRA
    - MasterData2.0
    Description: Type of platform
    Type: String
  Project:
    Description: Specific component type (e.g. Security Gateway, Audit Support, Bag
      Management, etc.)
    Type: String
  Purpose:
    AllowedValues:
    - Web
    - Application
    - DB
    - Bastion
    - Agent
    - AgentRelay
    - Bucket
    - Build
    - Security
    Description: Specify the purpose of this component, such as Web, DB, Application.
    Type: String
  Subnets:
    Description: The list of SubnetIds for EC2 instances in your Virtual Private Cloud
      (VPC)
    Type: CommaDelimitedList
  ELBSubnets:
    Description: The list of SubnetIds for the ELB in your Virtual Private Cloud (VPC)
    Default: NONE
    Type: CommaDelimitedList
  VpcId:
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    Type: String
  MinInstancesInService:
    Default: '2'
    Description: Autoscaling MinInstancesInService
    Type: String
  Bucket:
    Default: '10'
    Description: s3 bucket name
    Type: String
  ArtifactsId:
    Description: s3 bundle key
    Type: String
  ETag:
    Description: s3 bundle etag
    Type: String
  BundleType:
    Description: s3 bundle type
    Default: tgz
    Type: String
  Weight:
    Default: '1'
    Description: Weight
    Type: Number
  CertPath:
    Description: server certificate path
    Default: "/"
    Type: String
  CertName:
    Description: server certificate name
    Default: NONE
    Type: String
  CrossZone:
    Description: Whether cross-zone load balancing is enabled for the load balancer.
    Default: 'true'
    Type: String
  Profiles:
    Description: Spring boot profiles customization for data copy.
    Default: ''
    Type: String
  JavaOptions:
    Description: JVM options
    Default: ''
    Type: String
Mappings:
  IPRangeMap:
    Integration:
      Range: 10.0.0.0/8
    Integration-historical:
      Range: 10.0.0.0/8
    Production:
      Range: 10.226.0.0/16
    PreProduction:
      Range: 10.0.0.0/8
    Production-historical:
      Range: 10.226.0.0/16
Resources:
  ApplicationName:
    Properties:
      ApplicationName:
        Ref: Project
    Type: AWS::CodeDeploy::Application
  DeploymentGroup:
    DependsOn:
    - ApplicationName
    Properties:
      ApplicationName:
        Ref: ApplicationName
      AutoScalingGroups:
      - Ref: ServerAutoScalingGroup
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      Deployment:
        Description:
          Ref: Project
        IgnoreApplicationStopFailures: 'true'
        Revision:
          RevisionType: S3
          S3Location:
            Bucket:
              Ref: Bucket
            Key:
              Ref: ArtifactsId
            BundleType:
              Ref: BundleType
            ETag:
              Ref: ETag
      ServiceRoleArn:
        Fn::Join:
        - ''
        - - 'arn:aws:iam::'
          - Ref: AWS::AccountId
          - ":role/CodeDeployServiceRole"
    Type: AWS::CodeDeploy::DeploymentGroup
  BadInstance:
    Properties:
      AlarmActions:
      - Ref: NotificationTopic
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: Project
          - " Bad Instance: Email Notification Sent"
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: LoadBalancerName
        Value:
          Ref: ElasticLoadBalancer
      EvaluationPeriods: '1'
      MetricName: UnHealthyHostCount
      Namespace: AWS/ELB
      Period: '300'
      Statistic: Average
      Threshold: '0'
    Type: AWS::CloudWatch::Alarm
  CPUAlarmHigh:
    Properties:
      AlarmActions:
      - Ref: ServerScaleUpPolicy
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: Project
          - " High Usage: Adding Instances"
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: ServerAutoScalingGroup
      EvaluationPeriods: '2'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold:
        Ref: CPUThreshold
    Type: AWS::CloudWatch::Alarm
  CPUAlarmLow:
    Properties:
      AlarmActions:
      - Ref: ServerScaleDownPolicy
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: Project
          - " Low Usage: No Action Required"
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: ServerAutoScalingGroup
      EvaluationPeriods: '10'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '300'
      Statistic: Average
      Threshold: '10'
    Type: AWS::CloudWatch::Alarm
  CPUWarningHigh:
    Properties:
      AlarmActions:
      - Ref: NotificationTopic
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: Project
          - " High Usage: Email Notification Sent"
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: '1'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold: '50'
    Type: AWS::CloudWatch::Alarm
  ElasticLoadBalancer:
    Properties:
      ConnectionSettings:
        IdleTimeout:
          Ref: ELBIdleTimeout
      CrossZone:
        Ref: CrossZone
      HealthCheck:
        HealthyThreshold: '3'
        Interval: '30'
        Target:
          Fn::If:
          - ELBHealthCheckURLDefinedCondition
          - Fn::Join:
            - ''
            - - 'HTTPS:'
              - Ref: HealthCheckPort
              - Ref: ELBHealthCheckURL
          - Fn::Join:
            - ''
            - - 'TCP:'
              - Ref: HealthCheckPort
        Timeout: '25'
        UnhealthyThreshold: '5'
      Listeners:
      - InstancePort:
          Ref: HealthCheckPort
        LoadBalancerPort:
          Ref: ElbPort
        Protocol:
          Ref: ListenerProtocol
        InstanceProtocol:
          Ref: InstanceProtocol
        SSLCertificateId:
          Fn::If:
          - SSLCertDefinedCondition
          - Fn::Join:
            - ":"
            - - arn
              - aws
              - acm
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - Fn::Join:
                - ''
                - - certificate
                  - Ref: CertPath
                  - Ref: CertName
          - Ref: AWS::NoValue
      Scheme:
        Ref: ELBType
      SecurityGroups:
      - Ref: LoadBalancerSecurityGroup
      Subnets:
        Fn::If:
        - ELBSubnetsCondition
        - Ref: Subnets
        - Ref: ELBSubnets
    Type: AWS::ElasticLoadBalancing::LoadBalancer
  InstanceSecurityGroup:
    Properties:
      GroupDescription: Enable HTTP access on the configured port
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        FromPort:
          Ref: HealthCheckPort
        IpProtocol: tcp
        ToPort:
          Ref: HealthCheckPort
      - CidrIp: 10.0.0.0/8
        IpProtocol: "-1"
      SecurityGroupIngress:
      - FromPort:
          Ref: HealthCheckPort
        IpProtocol: tcp
        SourceSecurityGroupId:
          Ref: LoadBalancerSecurityGroup
        ToPort:
          Ref: HealthCheckPort
      - Fn::If:
        - EnableSSHCondition
        - FromPort: '22'
          IpProtocol: tcp
          CidrIp:
            Fn::FindInMap:
            - IPRangeMap
            - Ref: Environment
            - Range
          ToPort: '22'
        - Ref: AWS::NoValue
      VpcId:
        Ref: VpcId
    Type: AWS::EC2::SecurityGroup
  DNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Fn::Join:
        - ''
        - - Ref: DNSZoneName
          - "."
      Comment: Zone apex alias targeted to myELB LoadBalancer.
      RecordSets:
      - Name:
          Fn::Join:
          - ''
          - - Ref: DNSShortName
            - Fn::Join:
              - ''
              - - "."
                - Ref: DNSZoneName
        Type: A
        AliasTarget:
          HostedZoneId:
            Fn::GetAtt:
            - ElasticLoadBalancer
            - CanonicalHostedZoneNameID
          DNSName:
            Fn::GetAtt:
            - ElasticLoadBalancer
            - DNSName
        SetIdentifier:
          Ref: AWS::Region
        Weight:
          Ref: Weight
  LaunchConfig:
    Metadata:
      Warning: In order for cloud-init to work, directory /etc/rsyslog.d must exist.
        See https://bugzilla.redhat.com/show_bug.cgi?id=953530
    Properties:
      ImageId:
        Ref: AmiId
      IamInstanceProfile:
        Ref: InstanceProfile
      InstanceType:
        Ref: InstanceType
      BlockDeviceMappings:
      - DeviceName:
          Ref: VolumeDeviceName
        Ebs:
          VolumeType:
            Ref: VolumeType
          Iops:
            Ref: Iops
          DeleteOnTermination:
            Ref: VolumeDeleteOnTermination
          VolumeSize:
            Ref: RootVolume
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      KeyName:
        Fn::If:
        - EnableSSHCondition
        - Ref: KeyName
        - Ref: AWS::NoValue
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -x\n"
            - "#*** In order for cloud-init to work, directory /etc/rsyslog.d must
              exist\n"
            - "#*** disable SSH for Production ***# \n"
            - "[[ "
            - Ref: EnableSSH
            - " == 'false' ]] && stop ssh\n"
            - "[[ "
            - Ref: EnableSSH
            - " == 'false' ]] && mv /etc/init/ssh.conf /etc/init/ssh.conf.off\n"
            - "[[ "
            - Ref: EnableSSH
            - " == 'false' ]] && touch /etc/ssh/sshd_not_to_be_run\n"
            - 'echo `date` >> /tmp/UserData.log

'
            - 'bhn-uses codedeploy >> /tmp/UserData.log

'
            - "#echo "
            - Ref: ETag
            - "\n"
            - "# Export env variables needed for newrelic script to run\n"
            - echo "ENV_PROJECT_NAME=
            - Ref: Project
            - "\" >> /etc/environment\n"
            - echo "DEPLOYMENT_SWITCH_ENV=
            - Ref: Environment
            - "\" >> /etc/environment\n"
            - echo "PROFILES=
            - Ref: Profiles
            - "\" >> /etc/environment\n"
            - echo "JAVA_OPTIONS=
            - Ref: JavaOptions
            - "\" >> /etc/environment\n"
            - ". /etc/environment"
            - "#*** CloudWatch logs***# \n"
            - 'wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py

'
            - wget https://aws-codedeploy-
            - Ref: AWS::Region
            - ".s3.amazonaws.com/cloudwatch/codedeploy_logs.conf\n"
            - 'chmod +x ./awslogs-agent-setup.py

'
            - 'python awslogs-agent-setup.py -n -r '
            - Ref: AWS::Region
            - " -c s3://aws-codedeploy-"
            - Ref: AWS::Region
            - "/cloudwatch/awslogs.conf\n"
            - 'mkdir -p /var/awslogs/etc/config

'
            - 'cp codedeploy_logs.conf /var/awslogs/etc/config/

'
            - 'service awslogs restart

'
            - "#*** In order for cloud-init to work, directory /etc/rsyslog.d must
              exist\n"
            - cfn-signal
            - " --exit-code $?"
            - " --stack "
            - Ref: AWS::StackName
            - " --resource Instance"
            - " --region "
            - Ref: AWS::Region
            - "\n"
    Type: AWS::AutoScaling::LaunchConfiguration
  LoadBalancerSecurityGroup:
    Properties:
      GroupDescription: Enable HTTP access on healthcheck port.
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        FromPort:
          Ref: HealthCheckPort
        IpProtocol: tcp
        ToPort:
          Ref: HealthCheckPort
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort:
          Ref: HealthCheckPort
        IpProtocol: tcp
        ToPort:
          Ref: HealthCheckPort
      VpcId:
        Ref: VpcId
    Type: AWS::EC2::SecurityGroup
  MaxInstances:
    Properties:
      AlarmActions:
      - Ref: NotificationTopic
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: Project
          - " Max Instances: **Call Support List!**"
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: LoadBalancerName
        Value:
          Ref: ElasticLoadBalancer
      EvaluationPeriods: '1'
      MetricName: HealthyHostCount
      Namespace: AWS/ELB
      Period: '300'
      Statistic: Average
      Threshold: '8'
    Type: AWS::CloudWatch::Alarm
  NoInstances:
    Properties:
      AlarmActions:
      - Ref: NotificationTopic
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: Project
          - " is Down: **Call Support List!**"
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: LoadBalancerName
        Value:
          Ref: ElasticLoadBalancer
      EvaluationPeriods: '1'
      MetricName: HealthyHostCount
      Namespace: AWS/ELB
      Period: '60'
      Statistic: Average
      Threshold: '1'
    Type: AWS::CloudWatch::Alarm
  NotificationTopic:
    Properties:
      Subscription:
      - Endpoint:
          Ref: OperatorEmail
        Protocol: email
    Type: AWS::SNS::Topic
  ServerAutoScalingGroup:
    Properties:
      HealthCheckType:
        Fn::If:
        - ASGHealthCheckTypeIsELBCondition
        - Ref: ASGHealthCheckType
        - Ref: AWS::NoValue
      HealthCheckGracePeriod:
        Fn::If:
        - ASGHealthCheckTypeIsELBCondition
        - Ref: ASGHealthCheckGracePeriod
        - Ref: AWS::NoValue
      AvailabilityZones:
      - Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      - Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      DesiredCapacity:
        Ref: InitialInstanceCount
      LaunchConfigurationName:
        Ref: LaunchConfig
      LoadBalancerNames:
      - Ref: ElasticLoadBalancer
      MaxSize:
        Ref: MaximumInstanceCount
      MinSize:
        Ref: MinimumInstanceCount
      NotificationConfiguration:
        NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
        TopicARN:
          Ref: NotificationTopic
      Tags:
      - Key: Name
        PropagateAtLaunch: 'true'
        Value:
          Ref: Project
      - Key: Platform
        PropagateAtLaunch: 'true'
        Value:
          Ref: Platform
      - Key: Project
        PropagateAtLaunch: 'true'
        Value:
          Ref: Project
      - Key: Environment
        PropagateAtLaunch: 'true'
        Value:
          Ref: Environment
      - Key: ArtifactsId
        PropagateAtLaunch: 'true'
        Value:
          Ref: ArtifactsId
      - Key: BundlePath
        PropagateAtLaunch: 'true'
        Value:
          Ref: BundlePath
      - Key: Owner
        PropagateAtLaunch: 'true'
        Value:
          Ref: Owner
      - Key: Template
        PropagateAtLaunch: 'true'
        Value:
          Ref: Template
      - Key: ServiceName
        PropagateAtLaunch: 'true'
        Value:
          Ref: ServiceName
      - Key: Purpose
        PropagateAtLaunch: 'true'
        Value:
          Ref: Purpose
      - Key: Change
        PropagateAtLaunch: 'true'
        Value:
          Ref: Change
      VPCZoneIdentifier:
        Ref: Subnets
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService:
          Ref: MinInstancesInService
        PauseTime: PT3M0S
  ServerScaleDownPolicy:
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: ServerAutoScalingGroup
      Cooldown: '60'
      ScalingAdjustment: "-2"
    Type: AWS::AutoScaling::ScalingPolicy
  ServerScaleUpPolicy:
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: ServerAutoScalingGroup
      Cooldown: '180'
      ScalingAdjustment: '2'
    Type: AWS::AutoScaling::ScalingPolicy
